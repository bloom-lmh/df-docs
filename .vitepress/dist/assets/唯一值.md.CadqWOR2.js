import{_ as a,c as i,o as s,ag as t}from"./chunks/framework.C-zOf1vr.js";const k=JSON.parse('{"title":"唯一值","description":"","frontmatter":{},"headers":[],"relativePath":"唯一值.md","filePath":"唯一值.md"}'),n={name:"唯一值.md"};function l(r,e,d,o,p,c){return s(),i("div",null,[...e[0]||(e[0]=[t('<h1 id="唯一值" tabindex="-1">唯一值 <a class="header-anchor" href="#唯一值" aria-label="Permalink to &quot;唯一值&quot;">​</a></h1><p>一般来说，<code>DataFaker</code> 方法不返回唯一值。但是某些方法和语言环境使用的数据集比其他方法和语言环境小得多。例如，<code>faker.animal.type</code> 只有 44 种可能的动物可供选择。相比之下，<code>faker.person.fullName()</code> 从数百个名字、姓氏和前缀/后缀的列表中提取，因此它可以生成数十万个唯一的名称。即便如此，生日悖论 也意味着很快就会生成重复的值。</p><p>所以有时，你想要生成唯一值。例如，你可能希望在数据库电子邮件列中具有唯一值。有几种可能的策略：</p><ol><li>如果你想一次生成所有值，请使用 <code>faker.helpers.uniqueArray()</code>。例如：</li></ol><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">faker.helpers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uniqueArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(faker.internet.email, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// will generate 1000 unique email addresses</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>如果值不足以满足你的需求，请考虑使用你自己的顺序值作为前缀或后缀，例如，你可以依次将 <code>1.、2</code>. 添加到每个生成的电子邮件的前缀。</li><li>构建你自己的逻辑来跟踪一组先前生成的值，并在生成重复值时根据需要重新生成值</li><li>使用第三方包来强制唯一性，例如 <code>enforce-unique</code> 或 <code>@dpaskhin/unique</code>。</li></ol>',6)])])}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
