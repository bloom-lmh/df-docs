import{_ as e,c as s,o as i,ag as n}from"./chunks/framework.B-XtCDNB.js";const h=JSON.parse('{"title":"什么是 DataFaker？","description":"","frontmatter":{},"headers":[],"relativePath":"什么是DataFaker.md","filePath":"什么是DataFaker.md"}'),l={name:"什么是DataFaker.md"};function r(t,a,o,d,c,p){return i(),s("div",null,[...a[0]||(a[0]=[n(`<h1 id="什么是-datafaker" tabindex="-1">什么是 DataFaker？ <a class="header-anchor" href="#什么是-datafaker" aria-label="Permalink to &quot;什么是 DataFaker？&quot;">​</a></h1><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p><code>DataFaker</code> 是一个数据生成器，底层依赖 <code>faker.js</code>，并在之上扩展了模板语法，能够帮助你快速生成各类的数据，包括引用数据和递归数据，满足你在不同场景下各类数据的生成需求。它特别适用于以下场景：</p><ul><li>前端开发中的模拟数据</li><li>单元测试和集成测试</li><li>API 接口原型设计</li><li>数据库样本数据生成</li><li>演示和教学用例</li></ul><p><a href="https://faker.nodejs.cn/guide/" target="_blank" rel="noreferrer">致敬 faker.js</a></p><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>无侵入：<code>DataFaker</code> 对<code>faker.js</code>只做增强不做修改，你仍然可以像以前那样使用 <code>faker.js</code></li><li>模板化：<code>DataFaker</code>以模板的方式来定义数据结构，就像定义数据库表结构那样</li><li>面向模型：<code>DataFaker</code>将模板封装为了模型，以模型为基本单元，提供了模型复用机制，让你的数据模板可在多处复用</li><li>上下文机制：<code>DataFaker</code>采用上下文机制保持数据之间的关联性</li><li>多语言：<code>DataFaker</code>底层依托<code>faker.js</code>，其同样也支持 <code>70</code> 多种语言环境</li><li>多数据源：<code>DataFaker</code> 借助了 <code>faker.js</code> 的底层数据库，能够生成涵盖动物、书本等 <code>26</code> 类数据</li><li>可配置：<code>DataFaker</code> 支持个性化配置方式</li></ul><h2 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库" aria-label="Permalink to &quot;数据库&quot;">​</a></h2><p><code>DataFaker</code> 借助了 <code>faker.js</code> 的底层数据库，能够生成涵盖动物、书本等 26 类数据，如下所示：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // Airline Module</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.aircraftType&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.airline&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.airplane&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.airport&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.flightNumber&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.recordLocator&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&#39;airline.seat&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="语言环境" tabindex="-1">语言环境 <a class="header-anchor" href="#语言环境" aria-label="Permalink to &quot;语言环境&quot;">​</a></h2><p>得益于 <code>faker.js</code> 的强大的语言环境支持，<code>DataFaker</code> 目前支持以下语言环境有 70 多种：</p>`,12)])])}const u=e(l,[["render",r]]);export{h as __pageData,u as default};
